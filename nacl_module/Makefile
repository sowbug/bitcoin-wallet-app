VALID_TOOLCHAINS := newlib glibc pnacl

NACL_SDK_ROOT ?= $(abspath $(CURDIR)/../..)i
include $(NACL_SDK_ROOT)/tools/common.mk

TARGET = wallet
LIBS = $(DEPS) ppapi_cpp ppapi pthread crypto jsoncpp

CFLAGS = -Wall

SOURCES = \
	master_key.cc \
	wallet.cc

# Build rules generated by macros from common.mk:
$(foreach src,$(SOURCES),$(eval $(call COMPILE_RULE,$(src),$(CFLAGS))))

ifeq ($(CONFIG),Release)
$(eval $(call LINK_RULE,$(TARGET)_unstripped,$(SOURCES),$(LIBS),$(DEPS)))
$(eval $(call STRIP_RULE,$(TARGET),$(TARGET)_unstripped))
else
$(eval $(call LINK_RULE,$(TARGET),$(SOURCES),$(LIBS),$(DEPS)))
endif

$(eval $(call NMF_RULE,$(TARGET),))

all: force_look
	cp $(OUTBASE)/newlib/Release/wallet.nmf $(ZIPBASE)/newlib/Release
	cp $(OUTBASE)/newlib/Release/wallet_arm.nexe $(ZIPBASE)/newlib/Release
	cp $(OUTBASE)/newlib/Release/wallet_x86_32.nexe $(ZIPBASE)/newlib/Release
	cp $(OUTBASE)/newlib/Release/wallet_x86_64.nexe $(ZIPBASE)/newlib/Release

force_look:
	true
