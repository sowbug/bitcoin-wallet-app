# Copyright 2014 Mike Tsao <mike@sowbug.com>

# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use, copy,
# modify, merge, publish, distribute, sublicense, and/or sell copies
# of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

VALID_TOOLCHAINS := pnacl

NACL_SDK_ROOT ?= $(abspath $(CURDIR)/../..)i
include $(NACL_SDK_ROOT)/tools/common.mk

ZIPBASE ?= ../out/zip

TARGET = hd_wallet
LIBS = $(DEPS) ppapi_cpp ppapi pthread crypto jsoncpp

CFLAGS = -Wall -Wextra

SOURCES = \
  api.cc \
  base58.cc \
  blockchain.cc \
  credentials.cc \
  crypto.cc \
  encrypting_node_factory.cc \
  mnemonic.cc \
  node.cc \
  node_factory.cc \
  scrypt/crypto_scrypt-ref.c \
  secp256k1.cc \
  tx.cc \
  types.cc \
  wallet.cc \
  dispatcher.cc

# Build rules generated by macros from common.mk:
$(foreach src,$(SOURCES),$(eval $(call COMPILE_RULE,$(src),$(CFLAGS))))

ifeq ($(CONFIG),Release)
$(eval $(call LINK_RULE,$(TARGET)_unstripped,$(SOURCES),$(LIBS),$(DEPS)))
$(eval $(call STRIP_RULE,$(TARGET),$(TARGET)_unstripped))
else
$(eval $(call LINK_RULE,$(TARGET),$(SOURCES),$(LIBS),$(DEPS)))
endif

$(eval $(call NMF_RULE,$(TARGET),))

all: force_look
	cp $(OUTBASE)/$(TOOLCHAIN)/$(CONFIG)/$(TARGET).nmf \
		$(ZIPBASE)/$(TOOLCHAIN)/$(CONFIG)
	cp $(OUTBASE)/$(TOOLCHAIN)/$(CONFIG)/$(TARGET).pexe \
		$(ZIPBASE)/$(TOOLCHAIN)/$(CONFIG)

force_look:
	true
